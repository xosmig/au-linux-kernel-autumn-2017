VSD - Virtual Storage Device.
С точки зрения userspace приложений это устройство
хранения данных, имеющее фиксированный максимальный размер памяти.
Устройство позволяет читать/писать данные по произвольному смещению,
читать размер памяти устройства, менять размер памяти устройства
(но без превышения максимального размера памяти).

Данная функциональность экспортируется в userspace модулем
vsd_driver с помощью подсистемы misc_device'ов.
Специальная функциональность - считывание и изменение размера
памяти устройства, экспортируется в userspace
через нестандартные команды к misc_device (IOCTL'ы).

Задание состоит из двух частей:
1. Реализовать недостающую функциональность vsd_driver
   (смотрите TODO в его исходниках)

2. Реализовать свой консольный userspace клиент к IOCTL'ам
   misc_device'а (т.к. обычными read/write/open/close нельзя получить
   доступ с специальной функциональности VSD).
   Исполняемый файл клиента должен называться vsd_userspace.
   vsd_userspace выполняет один из двух IOCTL и завершается.
   Выполняемый IOCTL зависит от переданных аргументов командной
   строки:

   $ vsd_userspace size_get
   выполняет VSD_IOCTL_GET_SIZE и печатает полученный размер
   в стандартный вывод.

   $ vsd_userspace size_set SIZE_IN_BYTES
   выполняет VSD_IOCTL_SET_SIZE с аргументом SIZE_IN_BYTES.

   Для получения номеров команд и типов аргументов включите файл
   vsd_ioctl.h из vsd_driver. Изучите код функции vsd_dev_ioctl
   из модуля vsd_driver, чтобы понять как вызывать VSD_IOCTL_*
   из userspace.

   Клиент должен корректно обрабатывать неправильные аргументы
   командной строки и ошибки при вызове ioctl. Нужно сообщать об
   ошибочных аргументах, выводить пользователю подсказку,
   возвращать код возврата в систему
   (return EXIT_SUCCESS или EXIT_FAILURE из main).
   Можно писать на C++.

========================================================
Дополнительные комментарии к заданию.

Как часто бывает с реальными устройствами,
VSD не принадлежит модулю vsd_driver.
vsd_driver декларирует, что он может работать с VSD,
если тот появится на шине platform_bus.

Т.к. VSD - виртуальное устройство, то на шине
оно может появиться только в результате ручного
создания его описателя. Для этого используется
модуль vsd_device.

Модуль vsd_device выделяет ресурсы для VSD (буфер для хранения данных)
и регистрирует описатель VSD в подсистеме platform_device.
После этого VSD появляется на шине platform_bus.
Модуль vsd_device полностью реализован, но в нем придется разобраться,
чтобы закончить модуль vsd_driver.
